source('C:/Users/Alasdair/Dropbox/Jessie_data/analysis.R', echo=TRUE)
m <- aov(data, mean_standing_pos ~ condition)
m
m <- aov(data = filter(dat, distance == "far")), mean_standing_pos ~ condition)
data = filter(dat, distance == "far")
dat
m <- aov(data = filter(dat, distance == "far"), mean_standing_pos ~ condition)
data = filter(dat, distance == "far")
m
m <- aov(data = filter(dat, distance == "far"), mean_standing_pos ~ condition)
f_dat <- filter(dat, distance == "far")
dply::f_dat <- filter(dat, distance == "far")
r
dplyr::f_dat <- filter(dat, distance == "far")
f_dat <- dplyr::filter(dat, distance == "far")
f_dat <-
m <- aov(filter(dat, hoop == "far"), mean_standing_pos ~ condition)
f_dat <-
m <- aov(data = filter(dat, hoop == "far"), mean_standing_pos ~ condition)
m
summary(m)
summary(dat)
dat %>%
mutate(did_logic = if_else(condition == "LogicPuzzle", 1, 0))
warnings()
m <- map2stan(
alist(
mark ~ dbeta(p * theta, (1 - p) * theta),
logit(p) <- a + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
theta ~ dcauchy(0, 1)),
start = list(theta =1),
data = as.data.frame(dat),
iter = 1000, warmup = 1000, chains = 2)
library(rethinking)
dat %>%
mutate(
did_logic = if_else(condition == "LogicPuzzle", 1, 0),
did_reach = if_else(condition == "LogicPuzzle", 1, 0))
m <- map2stan(
alist(
mean_standing_pos ~ dbeta(p * theta, (1 - p) * theta),
logit(p) <- a + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
theta ~ dcauchy(0, 1)),
start = list(theta =1),
data = as.data.frame(dat),
iter = 1000, warmup = 1000, chains = 2)
dat
dat %>%
mutate(
did_logic = if_else(condition == "LogicPuzzle", 1, 0),
did_reach = if_else(condition == "LogicPuzzle", 1, 0)) -> dat
m <- map2stan(
alist(
mean_standing_pos ~ dbeta(p * theta, (1 - p) * theta),
logit(p) <- a + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
theta ~ dcauchy(0, 1)),
start = list(theta =1),
data = as.data.frame(dat),
iter = 1000, warmup = 1000, chains = 2)
dat$mean_standing_pos[which(dat$mean_standing_pos == 1)] = 0.95
dat$mean_standing_pos[which(dat$mean_standing_pos == 0)] = 0.05
library(rethinking)
dat %>%
mutate(
did_logic = if_else(condition == "LogicPuzzle", 1, 0),
did_reach = if_else(condition == "LogicPuzzle", 1, 0)) -> dat
m <- map2stan(
alist(
mean_standing_pos ~ dbeta(p * theta, (1 - p) * theta),
logit(p) <- a + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
theta ~ dcauchy(0, 1)),
start = list(theta =1),
data = as.data.frame(dat),
iter = 1000, warmup = 1000, chains = 2)
precis(m)
dat$p <- link(m)
?link
p <- link(m, n = 10)
head(p)
pdat <- data.frame(
did_logic = c(0, 1, 0),
did_logic = c(0, 0,10))
p <- link(m, n = 10, pdat)
pdat <- data.frame(
did_logic = c(0, 1, 0),
did_reach = c(0, 0,10))
p <- link(m, n = 10, pdat)
p
n = 10
p <- link(m, n  = n, pdat)
p[1,]
condition = rep(c("maths", "logic", "throwing"), each = n),
c(p[,1], p[,2], p[,3])
post <- extract.samples(m, n  = n,)
p[1,]post
post
pdat <- tibble(
thet = post$theta,
maths = post$a,
logic = post$a + post$b_logic,
reach = post$a + post$b_reach)
pdat <- tibble(
maths = post$a,
logic = post$a + post$b_logic,
reach = post$a + post$b_reach) %>%
gather(condition, p)
pdat
pdat$theta <- rep(pdat$theta, n)
pdat$theta <- rep(post$theta, n)
pdat$theta <- rep(pdat$theta, n)n
pdat$theta <- rep(post$theta, 3)
ggplot(pdat, aes(x = p, fill = condition)) + geom_density()
pdat <- tibble(
maths = post$a,
logic = post$a + post$b_logic,
reach = post$a + post$b_reach) %>%
gather(condition, p) %>% mutate(p <- logistic(p))
pdat$theta <- rep(post$theta, 3)
ggplot(pdat, aes(x = p, fill = condition)) + geom_density()
n = 10
post <- extract.samples(m, n  = n)
pdat <- tibble(
maths = post$a,
logic = post$a + post$b_logic,
reach = post$a + post$b_reach) %>%
gather(condition, p) %>% mutate(p = logistic(p))
pdat$theta <- rep(post$theta, 3)
ggplot(pdat, aes(x = p, fill = condition)) + geom_density()
n = 100
post <- extract.samples(m, n  = n)
pdat <- tibble(
maths = post$a,
logic = post$a + post$b_logic,
reach = post$a + post$b_reach) %>%
gather(condition, p) %>% mutate(p = logistic(p))
pdat$theta <- rep(post$theta, 3)
ggplot(pdat, aes(x = p, fill = condition)) + geom_density()
pdat$theta <- rep(post$theta, 3)
library(viridisLite
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + scale_fill_viridis_d()
library(viridisLite)
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + scale_fill_viridis_d()
plt
library(viridisLite)
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + theme_bw() + scale_fill_viridis_d()
plt <- scale_x_continuous((limits = c(0, 1), expand = c(0, 0)))
library(viridisLite)
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + theme_bw() + scale_fill_viridis_d()
plt <- scale_x_continuous(limits = c(0, 1), expand = c(0, 0))
plt
library(viridisLite)
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + theme_bw() + scale_fill_viridis_d()
plt <- plt + scale_x_continuous(limits = c(0, 1), expand = c(0, 0))
plt
library(viridisLite)
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + theme_bw() + scale_fill_viridis_d()
plt <- plt + scale_x_continuous("posterior for mean standing position",
limits = c(0, 1), expand = c(0, 0))
plt
pdat$condition <- fct_reorder(pdat$condition, maths, logic, reach)
pdat$condition <- fct_reorder(pdat$condition, "maths", "logic", "reach")
?fct_reorder
pdat$condition <- as_factor(pdat$condition, "maths", "logic", "reach")
summary(pdat)
pdat$theta <- rep(post$theta, 3)
pdat$condition <- as_factor(pdat$condition, "maths", "logic", "reach")
library(viridisLite)
plt <- ggplot(pdat, aes(x = p, fill = condition)) + geom_density(alpha = 0.5)
plt <- plt + theme_bw() + scale_fill_viridis_d()
plt <- plt + scale_x_continuous("posterior for mean standing position",
limits = c(0, 1), expand = c(0, 0))
plt
ggsave("estimate_of_mean_standing_pos.png", height = 4, width = 4)
dat <- read_sav("DATACOLLECTIONPHYSICAL.sav")
library(tidyverse)
library(haven)
dat <- read_sav("DATACOLLECTIONPHYSICAL.sav")
names(dat)
(dat %>%
mutate(person = 1:nrow(dat)) %>%
select(person, Condition,
AccuracyCHoopTrial1, AccuracyCHoopTrial2, AccuracyCHoopTrial3,
AccuracyMHoopTrial1, AccuracyMHoopTrial2, AccuracyMHoopTrial3,
AccuracyFHoopTrial1, AccuracyFHoopTrial2, AccuracyFHoopTrial3
) %>%
rename(condition = "Condition") %>%
gather("hoop", "accuracy", -condition, -person) %>%
mutate(
condition = as_factor(condition),
hoop = as_factor(hoop),
hoop = fct_collapse(hoop,
close = c("AccuracyCHoopTrial1", "AccuracyCHoopTrial2", "AccuracyCHoopTrial3"),
med   = c("AccuracyMHoopTrial1", "AccuracyMHoopTrial2", "AccuracyMHoopTrial3"),
far   = c("AccuracyFHoopTrial1", "AccuracyFHoopTrial2", "AccuracyFHoopTrial3"))
)) -> dat
warnings()
summary(dat)
filter(dat, accuracy > 1)
unique(dat$accuracy)
(dat %>%
filter(accuracy %in% c(0, 1)) %>%
group_by(person, condition, hoop) %>%
summarise(mean_standing_pos = mean(standing_position))) -> dat
summary(dat)
dat %>%
filter(accuracy %in% c(0, 1)) -> dat
summary(dat)
dat %>%
filter(accuracy %in% c(0, 1)) %>%
mutate(
did_logic = if_else(condition == "LogicPuzzle", 1, 0),
did_reach = if_else(condition == "LogicPuzzle", 1, 0)) -> dat
summary(dat)
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + d_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[participant] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = df)
library(rethinking)
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + d_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[participant] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = df)
dat <- as.data.frame(dat)
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + d_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[participant] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = df)
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + d_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[participant] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = dat)
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[participant] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = dat)
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[person] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = dat)
post <- extract.samples(m)
fx <- tibble(
condition = rep(c(
"Maths",
"Logic",
"Reaching"), each = length(post$a)),
samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reaching))
)
fx <- tibble(
condition = rep(c(
"Maths",
"Logic",
"Reaching"), each = length(post$a))
)
fx
samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reaching)))
samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reaching))
length(samples)
length(post$a)
length( samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reaching)))
length( samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reaching)))
str(post)
fx <- tibble(
condition = rep(c(
"Maths",
"Logic",
"Reaching"), each = length(post$a)),
samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reach))
)
plt <- ggplot(fx, aes(x = samples, fill = condition))
plt <- plt + geom_density(alpha = 0.5)
plt <- plt + theme_bw()  + scale_fill_viridis_d()
plt <- plt + scale_x_continuous(
name = "probablity of correctly responding to target", limits = c(0.5,1), expand = c(0,0))
plt
ggsave("scratch/JessieData.pdf")
m <- map2stan(
alist(
accuracy ~ dbinom(1, p),
logit(p) <- a + a_p[person] + b_logic * did_logic + b_reach * did_reach,
a ~ dnorm(0, 1),
b_logic ~ dnorm(0, 1),
b_reach ~ dnorm(0, 1),
a_p[person] ~ dnorm(0, sigma_p),
sigma_p ~ dcauchy(0, 1)),
data = filter(dat, hoop == "far"))
post <- extract.samples(m)
fx <- tibble(
condition = rep(c(
"Maths",
"Logic",
"Reaching"), each = length(post$a)),
samples = c(
logistic(post$a),
logistic(post$a + post$b_logic),
logistic(post$a + post$b_reach)))
plt <- ggplot(fx, aes(x = samples, fill = condition))
plt <- plt + geom_density(alpha = 0.5)
plt <- plt + theme_bw()  + scale_fill_viridis_d()
plt <- plt + scale_x_continuous(
name = "probablity of correctly responding to target", limits = c(0.5,1), expand = c(0,0))
plt
ggsave("JessieData.pdf")
fx
plt <- ggplot(fx, aes(x = samples, fill = condition))
plt <- plt + geom_density(alpha = 0.5)
plt <- plt + theme_bw()  + scale_fill_viridis_d()
plt <- plt + scale_x_continuous(
name = "probablity of correctly responding to target", limits = c(0, 1), expand = c(0,0))
plt
ggsave("JessieData.pdf")
plt <- ggplot(fx, aes(x = samples, fill = condition))
plt <- plt + geom_density(alpha = 0.5)
plt <- plt + theme_bw()  + scale_fill_viridis_d()
plt <- plt + scale_x_continuous(
name = "probablity of throwing beanbag into the far hoop", limits = c(0, 1), expand = c(0,0))
plt
ggsave("JessieData.pdf")
